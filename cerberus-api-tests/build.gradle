import com.github.spotbugs.snom.SpotBugsReport

/*
 * Copyright (c) 2020 Nike, inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'java'

repositories {
  mavenCentral()
}

configurations.all {
  resolutionStrategy {
    force "org.apache.ant:ant:${versions.ant}"
  }
}
dependencies {
  integrationTestImplementation project(':cerberus-core').sourceSets.test.output
  integrationTestImplementation group: 'org.testng', name: 'testng', version: '7.7.1'
  integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'

  integrationTestImplementation 'org.slf4j:slf4j-api:1.7.36'
  integrationTestImplementation "org.apache.groovy:groovy-all:${versions.groovy}"
  integrationTestImplementation "io.rest-assured:rest-assured:${versions.restAssured}"
  integrationTestImplementation "io.rest-assured:json-schema-validator:${versions.restAssured}"
  integrationTestImplementation "io.rest-assured:json-path:${versions.restAssured}"
  integrationTestImplementation "io.rest-assured:xml-path:${versions.restAssured}"
  integrationTestImplementation "javax.xml.bind:jaxb-api:2.3.1"
  integrationTestImplementation "org.glassfish.jaxb:jaxb-runtime:${versions.jaxbRuntime}"
  integrationTestImplementation "org.hamcrest:hamcrest:2.2"
  integrationTestImplementation "com.google.guava:guava:${versions.guava}"
  integrationTestImplementation "com.amazonaws:aws-java-sdk-kms:${versions.awsSdkVersion}"
  integrationTestImplementation "com.amazonaws:aws-java-sdk-sts:${versions.awsSdkVersion}"
  integrationTestImplementation "org.jboss.aerogear:aerogear-otp-java:1.0.0"
  integrationTestImplementation "org.apache.commons:commons-lang3:${versions.lang3}"
  integrationTestImplementation "com.thedeanda:lorem:2.1"
  integrationTestImplementation "jakarta.xml.bind:jakarta.xml.bind-api:${versions.jakartaXmlBindApi}"
  integrationTestImplementation "org.apache.groovy:groovy-all:${versions.groovy}"
}

integrationTest {
  testLogging {
    showStandardStreams = true
    events "passed", "skipped", "failed"
  }
  if (project.hasProperty('deprecatedEndpoint')) {
    useTestNG() {
      excludeGroups 'deprecated'
    }
  } else {
    useTestNG()
  }

  if (project.hasProperty('excludeTests')) {
    exclude project.property('excludeTests')
  }

  if (project.hasProperty('includeTests')) {
    include project.property('includeTests')
  }

}

spotbugsIntegrationTest {
  reports(({
    html {
      enabled = true
      destination = file("$buildDir/reports/spotbugs/test/spotbugs.html")
      stylesheet = 'fancy-hist.xsl'
    }
    xml {
      enabled = false
    }
  } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}
